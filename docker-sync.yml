version: '2'

options:
    # default: docker-compose.yml if you like, you can set a custom location (path) of your compose file like ~/app/compose.yml
    compose-file-path: 'docker-compose.yml'

    # optional, default: docker-compose-dev.yml if you like, you can set a custom location (path) of your compose file. Do not set it, if you do not want to use it at all

    # if its there, it gets used, if you name it explicitly, it HAS to exist
    # compose-dev-file-path: 'docker-compose-dev.yml'

    # optional, activate this if you need to debug something, default is false
    # IMPORTANT: do not run stable with this, it creates a memory leak, turn off verbose when you are done testing
    verbose: false

    # ADVANCED: default:eugenmayer/rsync -  the image to use for the rsync container. Do not change this until you exactly know, what you are doing
    # optional, default eugenmayer/rsync, you cannot just use "some unison" container, you entrypoint needs features, check the Dockerfiles
    #rsync_image: 'eugenmayer/rsync'

    # ADVANCED: default:leighmcculloch/unison -  the image to use for the unison container. Do not change this until you exactly know, what you are doing
    # optional, default eugenmayer/unison, you cannot just use "some unison" container, you entrypoint needs features, check the Dockerfiles
    unison_image: 'eugenmayer/unison'

    # optional, default auto, can be docker-sync, thor or auto and defines how the sync will be invoked on the cli. Mostly depending if your are using docker-sync solo, scaffolded or in development ( thor )
    cli_mode: 'auto'

syncs:
    # IMPORTANT: this name must be unique and should NOT match your real application container name!
    recruitment-task-katowice:
        # enable terminal_notifier. On every sync sends a Terminal Notification regarding files being synced. ( Mac Only ).
        # good thing in case you are developing and want to know exactly when your changes took effect.
        # be aware in case of unison this only gives you a notification on the initial sync, not the syncs after changes.
        # notify_terminal: true

        # which folder to watch / sync from - you can use tilde (~), it will get expanded. Be aware that the trailing slash makes a difference
        # if you add them, only the inner parts of the folder gets synced, otherwise the parent folder will be synced as top-level folder
        src: '.'

        # when a port of a container is exposed, on which IP does it get exposed. Localhost for docker for mac, something else for docker-machine
        sync_host_ip: '127.0.0.1'

        # should be a unique port this sync instance uses on the host to offer the rsync service on
        # sync_host_port: 10871

        # optional, a list of excludes for rsync - see rsync docs for details
        # sync_excludes: ['Gemfile.lock', 'Gemfile', 'config.rb', '.sass-cache/', 'sass/', 'sass-cache/', 'composer.json' , 'bower.json', 'package.json', 'Gruntfile*', 'bower_components/', 'node_modules/', '.gitignore', '.git/', '*.coffee', '*.scss', '*.sass']

        # use this to change the exclude syntax.
        # Path: you match the exact path ( nesting problem )
        # Name: If a file or a folder does match this string ( solves nesting problem )
        # Regex: Define a regular expression
        # none: You can define a type for each sync exclude, so sync_excludes: ['Name .git', 'Path Gemlock']
        #
        # for more see http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html#pathspec
        #sync_excludes_type: 'Name'

        # optional: use this to switch to rsync verbose mode
        #sync_args: '-v'

        # optional, a list of regular expressions to exclude from the fswatch - see fswatch docs for details

        # optional, default can be either rsync or unison See Strategies in the wiki for explanation
        sync_strategy: 'unison'

        # this does not user groupmap but rather configures the server to map
        # optional: usually if you map users you want to set the user id of your application container here
        #sync_userid: '1000'

        # defines how sync-conflicts should be handled. With default it will prefer the source with --copyonconflict
        # so on conflict, pick the one from the host and copy the conflicted file for backup
        sync_prefer: 'src'

        watch_excludes: ['.*/.git', '.*/node_modules', '.*/bower_components', '.*/sass-cache', '.*/.sass-cache', '.*/.sass-cache', '.coffee', '.scss', '.sass', '.gitignore']

        # optional: use this to switch to fswatch verbose mode
        watch_args: '-v'

        # optional: default is fswatch, if set to disable, no watcher will be used and you would need to start the sync manually
        watch_strategy: 'fswatch'

    recruitment-task-katowice-db:
        src: '../recruitment-task-katowice-db'
        sync_host_ip: '127.0.0.1'
        sync_strategy: 'unison'
        sync_prefer: 'src'
        watch_args: '-v'
        watch_strategy: 'fswatch'